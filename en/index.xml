<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Gethin</title><link>https://blog.gethin.online/en/</link><description>GETHIN's BLOG</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 14 Mar 2022 10:09:27 +0800</lastBuildDate><atom:link href="https://blog.gethin.online/en/index.xml" rel="self" type="application/rss+xml"/><item><title>My Resume</title><link>https://blog.gethin.online/en/resume/</link><pubDate>Mon, 14 Mar 2022 10:09:27 +0800</pubDate><author>xxxx</author><guid>https://blog.gethin.online/en/resume/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/content.jpg" referrerpolicy="no-referrer">
            </div><h3 id="chinese-resume">Chinese Resume</h3>
<p><a href="http://blog.gethin.online/resume/resume-cn.pdf" target="_blank" rel="noopener noreffer ">我的简历</a></p>
<h3 id="english-resume">English Resume</h3>
<p><a href="http://blog.gethin.online/resume/resume-en.pdf" target="_blank" rel="noopener noreffer ">My Resume</a></p>]]></description></item><item><title>Software Architecture Pattern</title><link>https://blog.gethin.online/en/software-architecture-pattern/</link><pubDate>Thu, 08 Jul 2021 10:52:39 +0800</pubDate><author>xxxx</author><guid>https://blog.gethin.online/en/software-architecture-pattern/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/content.jpg" referrerpolicy="no-referrer">
            </div><h2 id="application-landscapes">Application Landscapes</h2>
<h3 id="monolith">Monolith</h3>
<ul>
<li>Advantages
<ul>
<li>Easy to understand,implement,and test</li>
<li>Easy deployment</li>
<li>Ideal for limited scope</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Tight coupling</li>
<li>Easily leads to complex code</li>
<li>One size fit all for every subdomain</li>
</ul>
</li>
</ul>
<h3 id="n-tier">N-tier</h3>
<ul>
<li>Summary
<ul>
<li>Multiple tiers</li>
<li>Tier perform specific task</li>
<li>Tiers can be physically separated</li>
<li>Tiers aren&rsquo;t layers</li>
<li>Technical boundaries</li>
</ul>
</li>
<li>Typical: 3 tier
<ul>
<li>Presentation Tier(UI &amp; pure UI logic)</li>
<li>Business Logic Tier(business logic)</li>
<li>Data Tier</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Independent development</li>
<li>Scalability</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Changes ripple through tiers</li>
</ul>
</li>
</ul>
<h3 id="service-oriented">Service-Oriented</h3>
<ul>
<li>Summary
<ul>
<li>Multiple services</li>
<li>Each service is a business activity</li>
<li>Service compose-ability</li>
<li>Contract standardization</li>
<li>Enterprise Service Bus</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Services are loosely coupled</li>
<li>Scalability</li>
<li>No duplication of functionality</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Reduced agility and team autonomy</li>
<li>Costly</li>
<li>Many differing views</li>
</ul>
</li>
</ul>
<h3 id="microservices">MicroServices</h3>
<ul>
<li>Summary
<ul>
<li>Multiple services</li>
<li>Each service is a business activity</li>
<li>Teams run the service</li>
<li>No logic-heavy enterprise service bus</li>
<li>Maximum automate</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Services are loosely coupled and easily scalable</li>
<li>Increased agility</li>
<li>Reliability</li>
<li>Designed to handle failures</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Boundaries not always clear</li>
<li>Communication patterns can become complex</li>
</ul>
</li>
</ul>
<h3 id="serverless">Serverless</h3>
<ul>
<li>Summary
<ul>
<li>Backend as a service</li>
<li>Function as a service</li>
</ul>
</li>
</ul>
<h3 id="peer-to-peer">peer-to-peer</h3>
<ul>
<li>Summary
<ul>
<li>No central server</li>
<li>No constant connection</li>
<li>Dynamically discoverable</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Share resources</li>
<li>Save cost</li>
<li>Scaling</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>possible security issues</li>
<li>Only for specific scenarios</li>
<li>Nontrivial to code</li>
</ul>
</li>
</ul>
<h2 id="application-structure-patterns">Application Structure Patterns</h2>
<h3 id="layered">Layered</h3>
<ul>
<li>Summary
<ul>
<li>Presentation(UI)</li>
<li>Application(Translation between UI &amp; business)</li>
<li>Business(Business logic)</li>
<li>Persistence(Code to interact with the database)</li>
<li>Data(Data)</li>
</ul>
</li>
<li>Advantages
<ul>
<li>well-known among developers</li>
<li>Easy to organize</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Can lead to monolithic applications</li>
<li>Need to write lots of code</li>
</ul>
</li>
</ul>
<h3 id="microkernel">Microkernel</h3>
<ul>
<li>Summary
<ul>
<li>Task scheduler</li>
<li>Workflow</li>
<li>Data processing</li>
<li>Browser</li>
<li>Graphic designer</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Flexibility</li>
<li>Clean separation</li>
<li>Separate teams possible</li>
<li>Add and remove functionality at runtime</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Core API might not fit future plugins</li>
<li>Can the plugins be trusted</li>
<li>Not always clear what belongs in the core</li>
</ul>
</li>
</ul>
<h3 id="cqrs">CQRS</h3>
<ul>
<li>Summary
<ul>
<li>Command Query Responsibility Segregation</li>
<li>2 models: read/query &amp; write/command</li>
<li>Allows for scenario-specific queries</li>
<li>Synchronization required</li>
<li>Different from event sourcing</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Simpler read queries</li>
<li>Faster and more scalable read queries</li>
<li>Easier to communicate with stakeholders</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Added complexity</li>
<li>Learning curve</li>
<li>Possibility of data inconsistencies</li>
<li>Eventual consistency</li>
</ul>
</li>
</ul>
<h3 id="event-sourcing">Event sourcing</h3>
<ul>
<li>Summary
<ul>
<li>Store events instead of current state</li>
<li>Event = something that happened in the past</li>
<li>Rehydration or replay</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Trace of events</li>
<li>Audit trail</li>
<li>Business language</li>
<li>Event replay</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Replay and external systems</li>
<li>Event structure changes</li>
<li>Snapshots</li>
</ul>
</li>
</ul>
<h3 id="cqrs-and-event-sourcing-combined">CQRS and Event sourcing combined</h3>
<ul>
<li>Summary
<ul>
<li>2 different concepts</li>
<li>Powerful combination</li>
<li>It&rsquo;s not for simple domains, you could start with event sourcing, then add CQRS later.</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Simpler and fast queries</li>
<li>Scalable</li>
<li>Trace of event</li>
<li>Audit trail</li>
<li>Business language</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Added complexity</li>
<li>Leaning curve</li>
<li>Data inconsistencies</li>
<li>Event structure change</li>
</ul>
</li>
</ul>
<h2 id="ui-patterns">UI Patterns</h2>
<h3 id="mvc">MVC</h3>
<ul>
<li>Summary
<ul>
<li>Controller</li>
<li>Model</li>
<li>View</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Separation of concerns</li>
<li>Parallel development</li>
<li>Popular in web frameworks</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Controllers can become bloated</li>
<li>Different definitions</li>
</ul>
</li>
</ul>
<h3 id="mvp">MVP</h3>
<ul>
<li>Summary
<ul>
<li>View</li>
<li>Presenter</li>
<li>Model</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Great for desktop application</li>
<li>Separation of concerns</li>
<li>Testability</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Presenter can become bloated</li>
<li>Desktop application are less popular</li>
<li>MVVM Pattern</li>
</ul>
</li>
</ul>
<h3 id="mvvm">MVVM</h3>
<ul>
<li>Summary
<ul>
<li>View</li>
<li>ViewModel</li>
<li>Model</li>
</ul>
</li>
<li>Advantages
<ul>
<li>Great for modern desktop and mobile applications</li>
<li>Separation of concerns</li>
<li>Testability</li>
</ul>
</li>
<li>Disadvantages
<ul>
<li>Overkill for user interfaces</li>
<li>More difficult to debug</li>
<li>Desktop applications are less popular</li>
</ul>
</li>
</ul>]]></description></item><item><title>HTTP response status codes</title><link>https://blog.gethin.online/en/http-status-code/</link><pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://blog.gethin.online/en/http-status-code/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.jsdelivr.net/gh/Gethin1990/PicBed/BlogImg/web-3967926_1280-2021-06-10-16-37-50.jpg" referrerpolicy="no-referrer">
            </div><h2 id="http-response-status-codes">HTTP response status codes</h2>
<p>HTTP response status codes indicate whether a specific HTTP request has been successfully completed.</p>
<p>Responses are grouped in five classes:</p>
<ul>
<li>Informational responses (100–199)</li>
<li>Successful responses (200–299)</li>
<li>Redirects (300–399)</li>
<li>Client errors (400–499)</li>
<li>Server errors (500–599)</li>
</ul>
<p>The below status codes are defined by section 10 of RFC 2616. You can find an updated specification in RFC 7231.</p>
<p>If you receive a response that is not in this list, it is a non-standard response, possibly custom to the server&rsquo;s software.</p>
<h2 id="information-responses">Information responses</h2>
<h3 id="100-continue">100 Continue</h3>
<p>This interim response indicates that everything so far is OK and that the client should continue the request, or ignore the response if the request is already finished.</p>]]></description></item><item><title>First_post</title><link>https://blog.gethin.online/en/first-post/</link><pubDate>Thu, 06 May 2021 20:40:14 +0800</pubDate><author>xxxx</author><guid>https://blog.gethin.online/en/first-post/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/content.jpg" referrerpolicy="no-referrer">
            </div><h2 id="first-post">First Post</h2>
<h3 id="some-test-content">some test content</h3>]]></description></item><item><title>Third Wedding Anniversary (Museum)</title><link>https://blog.gethin.online/en/third-wedding-anniversary-museum/</link><pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://blog.gethin.online/en/third-wedding-anniversary-museum/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/content.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>Third Wedding Anniversary (Museum)</p></blockquote>
<p>Time fly, this is a special day because it is my 3rd wedding anniversary. Last sunday，we went to Shanghai Center Town. Lucky, it is no rain that day. As you know, it is alway rain in Rainy Season in Shanghai.<br>
My wife found a funny place in dazhong dianping (大众点评) app. The place is in 38 floor of Shanghai Center Tower named 宝库匠心馆(3A). Awesome, there are a lot of beautful things. The treasures are very delicate and beautful.</p>]]></description></item><item><title>Introduce Microservice &amp; Infrastructure on Cloud</title><link>https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/</link><pubDate>Fri, 17 Apr 2020 07:46:49 +0000</pubDate><author>xxxx</author><guid>https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/content.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>This article will introduce Microservice &amp; Infrastructure on Cloud.


<div id="summary" class="mindmap mindmap-md">
    <ul>
<li>Infrastructure on Cloud
<ul>
<li>Iaas &amp; Paas &amp; Saas</li>
<li>Virtual Machine &amp; Container</li>
<li>Docker &amp; Kubernetes</li>
<li>Most Basic Architecture</li>
<li>Azure Kubernets Service - AKS</li>
</ul>
</li>
</ul>

</div></p></blockquote>
<h2 id="iaas--paas--saas">Iaas &amp; Paas &amp; Saas</h2>
<ul>
<li>Infrastructure-as-a-service</li>
<li>Platform-as-a-service</li>
<li>Software-as-a-service</li>
</ul>
<p><a href="https://www.sherweb.com/blog/cloud-server/what-is-azure-paas/" target="_blank" rel="noopener noreffer ">https://www.sherweb.com/blog/cloud-server/what-is-azure-paas/</a></p>
<p></p>
<p></p>
<h2 id="virtual-machine--container">Virtual Machine &amp; Container</h2>
<p>Virtual Machine: Traditional development &amp; deployment，such as IIS &amp; tomcat</p>
<p>Container:</p>
<ol>
<li><strong>Platform independence: Build it once, run it anywhere</strong></li>
<li><strong>Resource efficiency and density</strong></li>
<li><strong>Effective isolation and resource sharing</strong></li>
<li><strong>Speed: Start, create, replicate or destroy containers in seconds</strong></li>
<li><strong>Immense and smooth scaling</strong></li>
<li><strong>Operational simplicity</strong></li>
<li><strong>Improved developer productivity and development pipeline</strong></li>
<li><strong>Language independence</strong></li>
</ol>
<h2 id="docker--kubernetes">Docker &amp; Kubernetes</h2>
<p>Docker is the popular way which implement container.
Other way ex. Azure Service Fabric, Amazon Elastic Container Service</p>]]></description></item><item><title>How to setup kubernetes on Azure</title><link>https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><author>xxxx</author><guid>https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/content.jpg" referrerpolicy="no-referrer">
            </div><h3 id="step-1-how-to-set-aks-cluster-in-azure">Step 1. How to set AKS Cluster in Azure</h3>
<p>This step could reference the official documents as below,
<a href="https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal" title="https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal" target="_blank" rel="noopener noreffer ">https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal</a></p>
<h3 id="step-2-open-the-could-shell">Step 2 Open the could shell</h3>
<p>)</p>
<p>The link as <a href="https://shell.azure.com/" target="_blank" rel="noopener noreffer ">https://shell.azure.com/</a></p>
<p>And input the Command as below</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">az aks get-credentials --resource-group AKSGroup --name AKSCluster</span></span></code></pre></div></div>
<h3 id="step-3-install-prometheus">Step 3 install Prometheus</h3>
<p><strong>How to create change nampspace :</strong></p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-bash">
        <span class="code-title"><i class="arrow fas fa-chevron-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">kuebctl create ns monitoring
</span></span><span class="line"><span class="cl">kubectl config set-context --current --namespace<span class="o">=</span>monitoring</span></span></code></pre></div></div>
<p><strong>The install command as below,</strong></p>]]></description></item></channel></rss>