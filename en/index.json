[{"categories":["architecture"],"content":"Application Landscappace ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:1:0","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"Monolith Advantages Easy to understand,implement,and test Easy deployment Ideal for limited scope Disadvantages Tight coupling Easily leads to complex code One size fit all for every subdomain ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:1:1","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"N-tier Summary Multiple tiers Tier perform specific task Tiers can be physically separated Tiers aren’t layers Technical boundaries Typical: 3 tier Prsentation Tier(UI \u0026 pure UI logic) Business Logic Tier(business logic) Data Tier Advantages Independent development Scalability Disadvantages Changes ripple through tiers ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:1:2","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"Service-Oriented Summary Multiple services Each service is a business activity Service composability Contract standardization Enterprise Service Bus Advantages Servies are loosely coupled Scalablility No duplication of functionality Disadvantages Reduced agility and team autonomy Costly Many differing views ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:1:3","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"Microservices Summary Multiple services Each service is a business activity Teams run the service No logic-heavy enterprise service bus Maximum automate Advantages Services are loosely coupled and eaily scalable Increased agility Reliability Designed to handle failures Disadvantages Boundaries not always clear Communication patterns can become complex ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:1:4","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"Serverless Summary Backend as a service Function as a service ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:1:5","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"peer-to-peer Summary No central server No constant connection Dynamically discoverable Advantages Share resources Save cost Scaling Disadvantages possible security issues Only for specific scenarios Nontrivial to code ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:1:6","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"Application Structure Patterns ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:2:0","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"Layered Summary Presentation(UI) Application(Translation between UI \u0026 busniess) Business(Business logic) Persistence(Code to interact with the database) Data(Data) Advantages well-known among developers Easy to organize Disadvantages Can lead to monolithic applications Need to write lots of code ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:2:1","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"Microkernel Summary Task scheduler Workflow Data processing Browser Graphic designer Advantages Flexibility Clean sparation Separate tems possible Add and remove functionality at runtime Disadvantages Core API might not fit future plugins Can the plugins be trusted Not always clear what belongs in the core ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:2:2","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"CQRS Summary Command Query Responsibility Segregation 2 models: read/query \u0026 write/command Allows for scenario-specific queries Synchronization required Different from event sourcing Advantages Simpler read queries Faster and more scalable read queries Easier to communicate with stakeholders Disadvantages Added complexity Learning curve Possibility of data inconsistencies Eventual consistency ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:2:3","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"Event sourcing Summary Store events instead of current state Event = something that happened in the past Rehydration or replay Advantages Trace of events Audit trail Business language Event replay Disadvantages Replay and external systems Event structure changes Snapshots ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:2:4","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"CQRS and Event sourcing combined Summary 2 different concepts Powerful combination It’s not for simple domains, you could start with event sourcing, then add CQRS later. Advantages Simpler and fast queries Scalable Trace of event Audit trail Business language Disadvantages Added complexity Leaning curve Data inconsistencies Event structure change ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:2:5","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"UI Patterns ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:3:0","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"MVC Summary Controller Model View Advantages Separation of concerns Parallel development Popular in web frameworks Disadvantages Controllers can become bloated Different definitions ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:3:1","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"MVP Summary View Presenter Model Advantages Great for desktop application Separation of concerns Testability Disadvantages Presenter can become bloated Desktop application are less popular MVVM Pattern ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:3:2","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["architecture"],"content":"MVVM Summary View ViewModel Model Advantages Great for modern desktop and mobile applications Sepatation of concerns Testability Disadvantages Overkill for user interfaces More difficult to debug Desktop applications are less popular ","date":"2021-07-08","objectID":"https://blog.gethin.online/en/software-architecture-pattern/:3:3","tags":["architecture"],"title":"Software Architecture Pattern","uri":"https://blog.gethin.online/en/software-architecture-pattern/"},{"categories":["the basics of computer science"],"content":"HTTP response status codes HTTP response status codes indicate whether a specific HTTP request has been successfully completed. Responses are grouped in five classes: Informational responses (100–199) Successful responses (200–299) Redirects (300–399) Client errors (400–499) Server errors (500–599) The below status codes are defined by section 10 of RFC 2616. You can find an updated specification in RFC 7231. If you receive a response that is not in this list, it is a non-standard response, possibly custom to the server’s software. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:1:0","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"Information responses ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:2:0","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"100 Continue This interim response indicates that everything so far is OK and that the client should continue the request, or ignore the response if the request is already finished. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:2:1","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"101 Switching Protocol This code is sent in response to an Upgrade request header from the client, and indicates the protocol the server is switching to. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:2:2","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"102 Processing (WebDAV) This code indicates that the server has received and is processing the request, but no response is available yet. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:2:3","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"103 Early Hints This status code is primarily intended to be used with the Link header, letting the user agent start preloading resources while the server prepares a response. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:2:4","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"Successful responses ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:0","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"200 OK The request has succeeded. The meaning of the success depends on the HTTP method: GET: The resource has been fetched and is transmitted in the message body. HEAD: The representation headers are included in the response without any message body. PUT or POST: The resource describing the result of the action is transmitted in the message body. TRACE: The message body contains the request message as received by the server. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:1","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"201 Created The request has succeeded and a new resource has been created as a result. This is typically the response sent after POST requests, or some PUT requests. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:2","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"202 Accepted The request has been received but not yet acted upon. It is noncommittal, since there is no way in HTTP to later send an asynchronous response indicating the outcome of the request. It is intended for cases where another process or server handles the request, or for batch processing. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:3","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"203 Non-Authoritative Information This response code means the returned meta-information is not exactly the same as is available from the origin server, but is collected from a local or a third-party copy. This is mostly used for mirrors or backups of another resource. Except for that specific case, the “200 OK” response is preferred to this status. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:4","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"204 No Content There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:5","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"205 Reset Content Tells the user-agent to reset the document which sent this request. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:6","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"206 Partial Content This response code is used when the Range header is sent from the client to request only part of a resource. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:7","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"207 Multi-Status (WebDAV) Conveys information about multiple resources, for situations where multiple status codes might be appropriate. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:8","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"208 Already Reported (WebDAV) Used inside a dav:propstat response element to avoid repeatedly enumerating the internal members of multiple bindings to the same collection. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:9","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"226 IM Used (HTTP Delta encoding) The server has fulfilled a GET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:3:10","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"Redirection messages ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:0","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"300 Multiple Choice The request has more than one possible response. The user-agent or user should choose one of them. (There is no standardized way of choosing one of the responses, but HTML links to the possibilities are recommended so the user can pick.) ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:1","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"301 Moved Permanently The URL of the requested resource has been changed permanently. The new URL is given in the response. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:2","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"302 Found This response code means that the URI of requested resource has been changed temporarily. Further changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:3","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"303 See Other The server sent this response to direct the client to get the requested resource at another URI with a GET request. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:4","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"304 Not Modified This is used for caching purposes. It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:5","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"305 Use Proxy Defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. It has been deprecated due to security concerns regarding in-band configuration of a proxy. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:6","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"306 unused This response code is no longer used; it is just reserved. It was used in a previous version of the HTTP/1.1 specification. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:7","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"307 Temporary Redirect The server sends this response to direct the client to get the requested resource at another URI with same method that was used in the prior request. This has the same semantics as the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: If a POST was used in the first request, a POST must be used in the second request. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:8","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"308 Permanent Redirect This means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: If a POST was used in the first request, a POST must be used in the second request. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:4:9","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"Client error responses ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:0","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"400 Bad Request The server could not understand the request due to invalid syntax. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:1","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"401 Unauthorized Although the HTTP standard specifies “unauthorized”, semantically this response means “unauthenticated”. That is, the client must authenticate itself to get the requested response. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:2","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"402 Payment Required This response code is reserved for future use. The initial aim for creating this code was using it for digital payment systems, however this status code is used very rarely and no standard convention exists. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:3","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"403 Forbidden The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401, the client’s identity is known to the server. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:4","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"404 Not Found The server can not find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurrence on the web. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:5","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"405 Method Not Allowed The request method is known by the server but has been disabled and cannot be used. For example, an API may forbid DELETE-ing a resource. The two mandatory methods, GET and HEAD, must never be disabled and should not return this error code. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:6","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"406 Not Acceptable This response is sent when the web server, after performing server-driven content negotiation, doesn’t find any content that conforms to the criteria given by the user agent. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:7","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"407 Proxy Authentication Required This is similar to 401 but authentication is needed to be done by a proxy. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:8","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"408 Request Timeout This response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers, like Chrome, Firefox 27+, or IE9, use HTTP pre-connection mechanisms to speed up surfing. Also note that some servers merely shut down the connection without sending this message. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:9","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"409 Conflict This response is sent when a request conflicts with the current state of the server. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:10","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"410 Gone This response is sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for “limited-time, promotional services”. APIs should not feel compelled to indicate resources that have been deleted with this status code. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:11","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"411 Length Required Server rejected the request because the Content-Length header field is not defined and the server requires it. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:12","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"412 Precondition Failed The client has indicated preconditions in its headers which the server does not meet. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:13","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"413 Payload Too Large Request entity is larger than limits defined by server; the server might close the connection or return an Retry-After header field. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:14","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"414 URI Too Long The URI requested by the client is longer than the server is willing to interpret. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:15","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"415 Unsupported Media Type The media format of the requested data is not supported by the server, so the server is rejecting the request. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:16","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"416 Range Not Satisfiable The range specified by the Range header field in the request can’t be fulfilled; it’s possible that the range is outside the size of the target URI’s data. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:17","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"417 Expectation Failed This response code means the expectation indicated by the Expect request header field can’t be met by the server. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:18","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"418 I’m a teapot The server refuses the attempt to brew coffee with a teapot. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:19","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"421 Misdirected Request The request was directed at a server that is not able to produce a response. This can be sent by a server that is not configured to produce responses for the combination of scheme and authority that are included in the request URI. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:20","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"422 Unprocessable Entity (WebDAV) The request was well-formed but was unable to be followed due to semantic errors. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:21","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"423 Locked (WebDAV) The resource that is being accessed is locked. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:22","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"424 Failed Dependency (WebDAV) The request failed due to failure of a previous request. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:23","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"425 Too Early Indicates that the server is unwilling to risk processing a request that might be replayed. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:24","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"426 Upgrade Required The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. The server sends an Upgrade header in a 426 response to indicate the required protocol(s). ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:25","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"428 Precondition Required The origin server requires the request to be conditional. This response is intended to prevent the ‘lost update’ problem, where a client GETs a resource’s state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:26","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"429 Too Many Requests The user has sent too many requests in a given amount of time (“rate limiting”). ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:27","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"431 Request Header Fields Too Large The server is unwilling to process the request because its header fields are too large. The request may be resubmitted after reducing the size of the request header fields. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:28","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"451 Unavailable For Legal Reasons The user-agent requested a resource that cannot legally be provided, such as a web page censored by a government. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:5:29","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"Server error responses ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:0","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"500 Internal Server Error The server has encountered a situation it doesn’t know how to handle. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:1","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"501 Not Implemented The request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:2","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"502 Bad Gateway This error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:3","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"503 Service Unavailable The server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This responses should be used for temporary conditions and the Retry-After: HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:4","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"504 Gateway Timeout This error response is given when the server is acting as a gateway and cannot get a response in time. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:5","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"505 HTTP Version Not Supported The HTTP version used in the request is not supported by the server. 506 Variant Also Negotiates The server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:6","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"507 Insufficient Storage (WebDAV) The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:7","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"508 Loop Detected (WebDAV) The server detected an infinite loop while processing the request. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:8","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"510 Not Extended Further extensions to the request are required for the server to fulfill it. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:9","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["the basics of computer science"],"content":"511 Network Authentication Required The 511 status code indicates that the client needs to authenticate to gain network access. ","date":"2021-06-10","objectID":"https://blog.gethin.online/en/http-status-code/:6:10","tags":[],"title":"HTTP response status codes","uri":"https://blog.gethin.online/en/http-status-code/"},{"categories":["bookmark"],"content":"First Post ","date":"2021-05-06","objectID":"https://blog.gethin.online/en/first-post/:1:0","tags":["first"],"title":"First_post","uri":"https://blog.gethin.online/en/first-post/"},{"categories":["bookmark"],"content":"some test content ","date":"2021-05-06","objectID":"https://blog.gethin.online/en/first-post/:1:1","tags":["first"],"title":"First_post","uri":"https://blog.gethin.online/en/first-post/"},{"categories":null,"content":" Third Wedding Anniversary (Museum) Time fly, this is a special day because it is my 3rd wedding anniversary. Last sunday，we went to Shanghai Center Town. Lucky, it is no rain that day. As you know, it is alway rain in Rainy Season in Shanghai. My wife found a funny place in dazhong dianping (大众点评) app. The place is in 38 floor of Shanghai Center Tower named 宝库匠心馆(3A). Awesome, there are a lot of beautful things. The treasures are very delicate and beautful. Welcome to Shanghai Center Tower The treasures as below ","date":"2020-07-07","objectID":"https://blog.gethin.online/en/third-wedding-anniversary-museum/:0:0","tags":null,"title":"Third Wedding Anniversary (Museum)","uri":"https://blog.gethin.online/en/third-wedding-anniversary-museum/"},{"categories":null,"content":" This article will introduce Microservice \u0026 Infrastructure on Cloud. Infrastructure on Cloud Iaas \u0026 Paas \u0026 Saas Virtual Machine \u0026 Container Docker \u0026 Kubernetes Most Basic Architecture Azure Kubernets Service - AKS ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:0:0","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"Iaas \u0026 Paas \u0026 Saas Infrastructure-as-a-service Platform-as-a-service Software-as-a-service https://www.sherweb.com/blog/cloud-server/what-is-azure-paas/ ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:1:0","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"Virtual Machine \u0026 Container Virtual Machine: Traditional development \u0026 deployment，such as IIS \u0026 tomcat Container: Platform independence: Build it once, run it anywhere Resource efficiency and density Effective isolation and resource sharing Speed: Start, create, replicate or destroy containers in seconds Immense and smooth scaling Operational simplicity Improved developer productivity and development pipeline Language independence ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:2:0","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"Docker \u0026 Kubernetes Docker is the popular way which implement container. Other way ex. Azure Service Fabric, Amazon Elastic Container Service Why use k8s: Container orchestration Great for multi-cloud adoption Deploy and update applications at scale for faster time-to-market (Horizontal auto scaling，Rolling updates，Canary deployments) Laying the foundation for cloud-native apps Lower infrastructure costs It can run on-premise or in a hybrid environment. You can move a Kubernetes cluster from one hosting vendor to another without changing (almost) any of the deployment and management processes. Zero-downtime deployments, fault tolerance, high availability, scaling, scheduling, and self-healing add significant value in Kubernetes. ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:3:0","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"Most Basic Architecture Service Registration Service Discovery Monitoring Traffic Limit Routing Load Balance Timeout/Retry Circuit Breaking (熔断) Service Downgrade Failover ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:4:0","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"Azure Kubernets Service -AKS ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:5:0","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"1. The First Stage Build application as normal way - Introduce Cloud Native Information Pod, Node, Replication Controller, Service, Namespace, Ingress, Gateway(Nginx)… ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:5:1","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"2. Use Third Party Components to Improve The System Helm, Traefik, Kubeapps, Prometheus, Grafana, ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:5:2","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"3. Use Service Mesh (Istio) for Micro Service Management Gateway \u0026 Virtual Service Cert Kiali \u0026 Grafana Use CI/CD to deploy your apps. Azure DevOps Scaling Intelligent Routing and Canary Releases https://docs.microsoft.com/en-us/azure/aks/servicemesh-istio-scenario-routing?pivots=client-operating-system-linux ","date":"2020-04-17","objectID":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/:5:3","tags":["Cloud Native","Kubernetes"],"title":"Introduce Microservice \u0026 Infrastructure on Cloud","uri":"https://blog.gethin.online/en/introduce-microservice-infrastructure-on-cloud/"},{"categories":null,"content":"Step 1. How to set AKS Cluster in Azure This step could reference the official documents as below, https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal ","date":"2020-03-01","objectID":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/:0:1","tags":["Cloud Native","Kubernetes"],"title":"How to setup kubernetes on Azure","uri":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/"},{"categories":null,"content":"Step 2 Open the could shell ) The link as https://shell.azure.com/ And input the Command as below az aks get-credentials --resource-group AKSGroup --name AKSCluster ","date":"2020-03-01","objectID":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/:0:2","tags":["Cloud Native","Kubernetes"],"title":"How to setup kubernetes on Azure","uri":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/"},{"categories":null,"content":"Step 3 install Prometheus How to create change nampspace : kuebctl create ns monitoring kubectl config set-context --current --namespace=monitoring The install command as below, helm install stable/prometheus --name kube-prometheus --set rbac.create=true --namespace monitoring If you met the issue like Error: namespaces “monitoring” is forbidden: User “system:serviceaccount:kube-system:default” cannot get resource “namespaces” in API group \"” in the namespace “monitoring” Solution: rbac-config.yaml apiVersion:v1kind:ServiceAccountmetadata:name:tillernamespace:kube-system---apiVersion:rbac.authorization.k8s.io/v1kind:ClusterRoleBindingmetadata:name:tillerroleRef:apiGroup:rbac.authorization.k8s.iokind:ClusterRolename:cluster-adminsubjects:- kind:ServiceAccountname:tillernamespace:kube-system kubectl create -f rbac-config.yaml helm init --service-account tiller --history-max 200 ","date":"2020-03-01","objectID":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/:0:3","tags":["Cloud Native","Kubernetes"],"title":"How to setup kubernetes on Azure","uri":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/"},{"categories":null,"content":"Step 4 install Grafana helm install stable/grafana --set persistence.enabled=true --set persistence.accessModes={ReadWriteOnce} --set persistence.size=8Gi -n grafana --namespace monitoring You can mark the service as LoadBalancer, kubectl edit svc grafana Get the password, kubectl get secret --namespace monitoring grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo ","date":"2020-03-01","objectID":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/:0:4","tags":["Cloud Native","Kubernetes"],"title":"How to setup kubernetes on Azure","uri":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/"},{"categories":null,"content":"step 5 Access the Kubernetes web dashboard in AKS The shell script as below. az aks browse --resource-group AKSGroup --name AKSCluster For RBAC-enabled clusters. kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard ","date":"2020-03-01","objectID":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/:0:5","tags":["Cloud Native","Kubernetes"],"title":"How to setup kubernetes on Azure","uri":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/"},{"categories":null,"content":"setp 6 install traekit install htpasswd. apt-get install apache2-utils generate password. htpasswd -nbm admin password1234 install traefik. helm install stable/traefik --set dashboard.enabled=true,serviceType=LoadBalancer,rbac.enabled=true,dashboard.auth.basic.admin='$apr1$ZywpxeoS$6U80kYPG116slxBceEsVz0',dashboard.domain=traefik.dashboard --name=traefik --namespace=kube-system helm delete. helm del --purge traefik ","date":"2020-03-01","objectID":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/:0:6","tags":["Cloud Native","Kubernetes"],"title":"How to setup kubernetes on Azure","uri":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/"},{"categories":null,"content":"step 7 install kubeapps 1. Install Kubeapps. kubectl create namespace kubeapps helm repo add bitnami https://charts.bitnami.com/bitnami Helm 2 command helm install --name kubeapps --namespace kubeapps bitnami/kubeapps Helm 3 command helm install kubeapps --namespace kubeapps bitnami/kubeapps --set useHelm3=true 2. Create a Kubernetes API token. Create service account, kubectl create serviceaccount kubeapps-operator -n kubeapps Create cluster role binding, kubectl create clusterrolebinding kubeapps-operator --clusterrole=cluster-admin --serviceaccount=kubeapps:kubeapps-operator Get the secret, kubectl get secret -n kubeapps $(kubectl get serviceaccount kubeapps-operator -n kubeapps -o jsonpath='{.secrets[].name}') -o jsonpath='{.data.token}' | base64 --decode \u0026\u0026 echo ","date":"2020-03-01","objectID":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/:0:7","tags":["Cloud Native","Kubernetes"],"title":"How to setup kubernetes on Azure","uri":"https://blog.gethin.online/en/how-to-setup-kubernetes-on-azure/"},{"categories":null,"content":"Self Introduction Hi, My name is Gethin, a software engineer which has majored in computer science and 8 years working experience in foreign fen-tech enterprises and famous internet companies like Honeywell, Tencent, etc. My goal is to be a software architect, I’m good at System Architecture \u0026 Refactoring \u0026 Design, Technical Research \u0026 Selection, Project Risk Identification. I also like research the cloud architect design. Strong learning capability, efficient communication, agile project management, strong implementation capacity, rapid technology selection is my advantage. I’m familiar with OOP, SOA, AOP, MVC, MVVM, EDA, BDD, DDD, Micro Service, Cloud Architecture, SPA etc. I value coding standards based on SOLID and know the common styles of Architecture \u0026 UML. l excellent in C#/.Net Technology, Proficient in traditional .NET Technology like WCF,WEB API,MVC,WPF \u0026 have good command of the modern .NET CORE Technology like RabbitMQ, Azure, K8S, Docker,etc. As a certified scrum master, I’m good at found the issue of Agile Technology and Flow, I understand the life cycle of software \u0026 DevOps which makes the technology landing and integration quickly. I have good command of with SQL Server, Oracle, MySQL, SP, EF, Redis. Familiar with mobile IOS development, Cordova.Good to know Vue, React, JavaScript, Jquary etc. ","date":"0001-01-01","objectID":"https://blog.gethin.online/en/about/:0:1","tags":null,"title":"About Me","uri":"https://blog.gethin.online/en/about/"},{"categories":null,"content":"Personal Experience GREEN DOT - Sr. Software Engineer Sr. Software Engineer in GREEN DOT,major in back-end system of bank development. like Transitions,cerdit card auto payment etc Main development language is C#, Main Technology is .NET Core, RabbitMQ, WEBAPI, K8S, SQLServer, etc Main project: Eureka create card,TMM,BAAS cerdit card auto payment etc 2019 function non0plural(number, name) { if (number == 0) { return \"\" } if (number == 1 || number == -1) { return number + \" \" +name } return number + \" \" + name + \"s\" } el = document.querySelector(\"#moment\"); function refresh() { start = dayjs(\"2019-05-31\") now = dayjs() total_months = now.diff(start, \"M\", true) months = total_months % 12 let years = 0 if (months Honeywell - Software Engineer 1 years Software Engineer in Honeywell, major in mobile app development,like SRS IOS app, ADS Project etc Main development language is SWIFT,JS. Main Technology is Cordova, Vue, IOS, Hybird, etc Main project: REF SAAS IOS APP, ADS Project 2018 GREEN DOT - Software Engineer II 3 years Software Engineer in GREEN DOT,major in RISK Contorl System of Bank development Main development language is C#, Main Technology is .NET, WCF, MVC, WEBAPI, etc Main project: APPLY PAY CASH Risk Control, MITIK \u0026 IDOLOGY Risk Control system integration, RISK Contorl System of Bank, etc 2015 Tencent Reading Limit - Software Engineer 1 years Software Engineer in Tencent Reading Limit, major in functions of ‘qidian’ development Main development language is C# \u0026 JS,Main Technology is .NET,MVC,aspx,memchached,Oracle Main project: Mobile Reward Active in Spring Festival,splash screen replacement,interaction in the end of page, etc 2014 Emore Group - Software Engineer 1 years 4 months Software Engineer in Emore Group,major in inner systems in group Main development language C#,JS, Main Technology is .NET,MVC,WPF,MSMQ,etc Main project:Exhibition System, Customer Service System,etc 2012 NUAA - Computer Science 4 years Nanjing University Of Aeronautics And Astronautics, Computer Science Specialty 2009 ","date":"0001-01-01","objectID":"https://blog.gethin.online/en/about/:0:2","tags":null,"title":"About Me","uri":"https://blog.gethin.online/en/about/"},{"categories":null,"content":"This Page Will Show The Favorite Websites ","date":"0001-01-01","objectID":"https://blog.gethin.online/en/websites/:1:0","tags":null,"title":"Favorite Websites","uri":"https://blog.gethin.online/en/websites/"},{"categories":null,"content":"The friend links as below ","date":"0001-01-01","objectID":"https://blog.gethin.online/en/links/:1:0","tags":null,"title":"Links","uri":"https://blog.gethin.online/en/links/"},{"categories":null,"content":"Welcome Leave Message ","date":"0001-01-01","objectID":"https://blog.gethin.online/en/message-board/:1:0","tags":null,"title":"Message Board","uri":"https://blog.gethin.online/en/message-board/"}]