[{"categories":null,"content":"https://cdn.jsdelivr.net/gh/Gethin1990/PicBed/BlogImg/gethin_logo.png ","date":"2021-05-16","objectID":"https://gethin1990.github.io/phonics/:0:0","tags":null,"title":"phonics","uri":"https://gethin1990.github.io/phonics/"},{"categories":null,"content":"自然拼读 ","date":"2021-05-16","objectID":"https://gethin1990.github.io/phonics/:1:0","tags":null,"title":"phonics","uri":"https://gethin1990.github.io/phonics/"},{"categories":null,"content":"元音 a am pam sam ad dad at cat rat an van man ran ap cap nap lap ab cab lab tab ag bag rag wag ack jack back sack pack ant pant Kant rant ang bang hang sang ank bank rank sank tank amp lamp camp ramp e ed Ted red en ten hen ell bell sell eg egg meg leg beg et jet get wet ess Bess less mess end bend mend send ent Kent bent sent went tent est best pest nest test west eck neck peck deck i id Sid kid ig pig dig ill Jill hill kill it sit fit hit pit im Tim Jim Kim dim in fin win tin pin ing ding ring king sing ink pink sink link ish fish dish wish ick pick kick sick tick Rick o ox fox box ot pot hot op hop top ob Bob job rob od nod pod rod og hog jog log om Tom mom ock rock sock lock u ug bug mug un run sun ut hut nut ub cub rub tub um gum hum mum uck duck luck tunk ump bump hump jump unch lunch munch punch ","date":"2021-05-16","objectID":"https://gethin1990.github.io/phonics/:1:1","tags":null,"title":"phonics","uri":"https://gethin1990.github.io/phonics/"},{"categories":null,"content":"辅音 bl black blink block blush cl clock clap click club class fl flag flex flip flop flush gl glass glad glob pl plan plane plant plot plum br Brad brick bring brush cr crab crack crash crop dr dress drip drop drum fr frog frank fresh Fred gr grass grab grand grid tr track trap trick truck sk skip skin skill sl sled slam slip slot sp spot spell spin spill st stand step stop stick sw swim swing swell ","date":"2021-05-16","objectID":"https://gethin1990.github.io/phonics/:1:2","tags":null,"title":"phonics","uri":"https://gethin1990.github.io/phonics/"},{"categories":null,"content":"元音组合 ead read bead lead ean jean dean lean clean eat heat meat neat treat eal meal seal deal real oa goat toad oat coat goat boat moat oad road toad load oap soap oak soak oast toast roast coast boast oal goal oaf loaf ","date":"2021-05-16","objectID":"https://gethin1990.github.io/phonics/:1:3","tags":null,"title":"phonics","uri":"https://gethin1990.github.io/phonics/"},{"categories":["书签"],"content":"了解如何在 LoveIt 主题中快速, 直观地创建和组织内容。 此文章用于测试。 以下内容仅用于测试主题功能 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:0:0","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"LoveIt 的文章列表参考如下 hugoloveit https://hugoloveit.com/zh-cn/posts/ ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:0:1","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"1 内容组织 保持博客文章存放在 content/posts 目录, 例如: content/posts/我的第一篇文章.md 保持简单的静态页面存放在 content 目录, 例如: content/about.md 本地资源组织 使用页面包中的页面资源. 你可以使用适用于 Resources.GetMatch 的值或者直接使用相对于当前页面目录的文件路径来引用页面资源. 将本地资源放在 assets 目录中, 默认路径是 /assets. 引用资源的文件路径是相对于 assets 目录的. 将本地资源放在 static 目录中, 默认路径是 /static. 引用资源的文件路径是相对于 static 目录的 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:1:0","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"2 前置参数 ---title:\"我的第一篇文章\"subtitle:\"\"# 文章副标题date:2020-03-04T15:58:26+08:00# 这篇文章创建的日期时间. 它通常是从文章的前置参数中的 date 字段获取的, 但是也可以在 网站配置 中设置.lastmod:2020-03-04T15:58:26+08:00# 上次修改内容的日期时间.draft:true# 如果设为 true, 除非 hugo 命令使用了 --buildDrafts/-D 参数, 这篇文章不会被渲染.author:\"\"# 文章作者.authorLink:\"\"# 文章作者的链接.description:\"\"# 文章内容的描述.license:\"\"# 这篇文章特殊的许可.images:[]# 页面图片, 用于 Open Graph 和 Twitter Cards.tags:[]# 文章的标签.categories:[]# 文章所属的类别.featuredImage:\"\"# 文章的特色图片.featuredImagePreview:\"\"# 用在主页预览的文章特色图片.hiddenFromHomePage:false# 如果设为 true, 这篇文章将不会显示在主页上.hiddenFromSearch:false# 如果设为 true, 这篇文章将不会显示在搜索结果中.twemoji:false# 如果设为 true, 这篇文章会使用 twemoji.lightgallery:true# 如果设为 true, 文章中的图片将可以按照画廊形式呈现.ruby:true# 如果设为 true, 这篇文章会使用 上标注释扩展语法.fraction:true# 如果设为 true, 这篇文章会使用 分数扩展语法.fontawesome:true# 如果设为 true, 这篇文章会使用 Font Awesome 扩展语法.linkToMarkdown:true# 如果设为 true, 内容的页脚将显示指向原始 Markdown 文件的链接.rssFullText:false# 如果设为 true, 在 RSS 中将会显示全文内容.toc:enable:trueauto:truecode:copy:true# ...math:enable:true# ...mapbox:accessToken:\"\"# ...share:enable:true# ...comment:enable:true# ...library:css:# someCSS = \"some.css\"# 位于 \"assets/\"# 或者# someCSS = \"https://cdn.example.com/some.css\"js:# someJS = \"some.js\"# 位于 \"assets/\"# 或者# someJS = \"https://cdn.example.com/some.js\"seo:images:[]# ...## featuredImage 和 featuredImagePreview 支持本地资源引用的完整用法.resources:- name:featured-imagesrc:featured-image.jpg- name:featured-image-previewsrc:featured-image-preview.jpg--- ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:2:0","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"3 内容摘要 文章摘要预览文章摘要预览 \" 文章摘要预览 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:3:0","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"3.1 自动摘要拆分 网站设置 summaryLength ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:3:1","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"3.2 手动摘要拆分 添加 \u003c!--more--\u003e ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:3:2","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"3.3 前置参数摘要 前置参数 summary ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:3:3","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"3.4 使用文章描述作为摘要 前置参数 description ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:3:4","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"4 Markdown 基本语法 ignore ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:4:0","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5 Markdown 扩展语法 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:0","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5.1 Emoji 支持 https://hugoloveit.com/zh-cn/emoji-support/ 😀,😄,😆,🤣,😅,😂 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:1","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5.2 数学公式 $$ c = \\pm\\sqrt{a^2 + b^2} $$ $$ c = \\pm\\sqrt{a^2 + b^2} $$ ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:2","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5.3 行内公式 默认的行内公式分割符是 $/$ 和 \\\\(/\\\\) $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:3","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5.4 mhchem $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:4","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5.5 字符注音或者注释 [Hugo]^(一个开源的静态网站生成工具) Hugo一个开源的静态网站生成工具 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:5","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5.6 分数 [99]/[100] 99/100 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:6","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5.7 Font Awesome 真开心! :(far fa-grin-tears): 真开心! ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:7","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"5.8 转义字符 {?:}joy: :joy: ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:5:8","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6 内置 Shortcodes https://hugoloveit.com/zh-cn/theme-documentation-built-in-shortcodes/ ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:0","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.1 figure {{\u003c figure src=\"/images/lighthouse.jpg\" title=\"Lighthouse (figure)\" \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:1","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.2 gist {{\u003c gist spf13 7896402 \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:2","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.3 highlight {{\u003c highlight html \u003e}} \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e {{\u003c /highlight \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:3","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.4 instagram instagram 的文档 {{\u003c instagram BWNjjyYFxVx hidecaption \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:4","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.5 param param 的文档 {{\u003c param description \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:5","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.6 ref 和 relref ref 和 relref 的文档 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:6","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.7 tweet tweet 的文档 {{\u003c tweet 877500564405444608 \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:7","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.8 vimeo vimeo 的文档 {{\u003c vimeo 146022717 \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:8","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"6.9 youtube youtube 的文档 {{\u003c youtube w7Ft2ymGmfc \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:6:9","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7 扩展shortcodes ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:0","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.1 style {{\u003c style \"text-align:right; strong{color:#00b1ff;}\" \u003e}} This is a **right-aligned** paragraph. {{\u003c /style \u003e}} This is a right-aligned paragraph. ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:1","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.2 link href [必需] content [可选] title [可选] rel [可选] class [可选] {{\u003c link \"https://github.com/upstage/\" Upstage \"Visit Upstage!\" \u003e}} 或者 {{\u003c link href=\"https://github.com/upstage/\" content=Upstage title=\"Visit Upstage!\" \u003e}} Upstage ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:2","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.3 image src [必需] 图片的 URL. alt [可选] 图片无法显示时的替代文本, 默认值是 src 参数的值. caption [可选] 图片标题. title [可选] 当悬停在图片上会显示的提示. class [可选] HTML figure 标签的 class 属性. src_s [可选] 图片缩略图的 URL, 用在画廊模式中, 默认值是 src 参数的值. src_l [可选] 高清图片的 URL, 用在画廊模式中, 默认值是 src 参数的值. height [可选] 图片的 height 属性. width [可选] 图片的 width 属性. linked [可选] 图片是否需要被链接, 默认值是 true. rel [可选] HTML a 标签 的 rel 补充属性, 仅在 linked 属性设置成 true 时有效. {{\u003c image src=\"/images/lighthouse.jpg\" caption=\"Lighthouse (`image`)\" src_s=\"/images/lighthouse-small.jpg\" src_l=\"/images/lighthouse-large.jpg\" \u003e}} lighthouse (image)\" lighthouse (image) ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:3","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.4 admonition 注意 一个 注意 横幅 摘要 一个 摘要 横幅 信息 一个 信息 横幅 技巧 一个 技巧 横幅 成功 一个 成功 横幅 问题 一个 问题 横幅 警告 一个 警告 横幅 失败 一个 失败 横幅 危险 一个 危险 横幅 Bug 一个 Bug 横幅 示例 一个 示例 横幅 引用 一个 引用 横幅 admonition shortcode 有以下命名参数: type [必需] admonition 横幅的类型, 默认值是 note. title [可选] admonition 横幅的标题, 默认值是 type 参数的值. open [可选] 横幅内容是否默认展开, 默认值是 true. 一个 admonition 示例: {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 或者 {{\u003c admonition tip \"This is a tip\" false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 呈现的输出效果如下: This is a tip 一个 技巧 横幅 ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:4","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.5 mermaid mermaid 是一个可以帮助你在文章中生成图表和流程图的库, 类似 Markdown 的语法. 7.5.1 流程图 一个 流程图 mermaid 示例: {{\u003c mermaid \u003e}} graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} 呈现的输出效果如下: 7.5.2 时序图 一个 时序图 mermaid 示例: {{\u003c mermaid \u003e}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} 呈现的输出效果如下: 7.5.3 甘特图 一个 甘特图 mermaid 示例: {{\u003c mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u003c /mermaid \u003e}} 呈现的输出效果如下: 7.5.4 类图 一个 类图 mermaid 示例: {{\u003c mermaid \u003e}} classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label {{\u003c /mermaid \u003e}} 呈现的输出效果如下: 7.5.5 状态图 一个 状态图 mermaid 示例: {{\u003c mermaid \u003e}} stateDiagram [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] {{\u003c /mermaid \u003e}} 呈现的输出效果如下: 7.5.6 Git 图 一个 Git 图 mermaid 示例: {{\u003c mermaid \u003e}} gitGraph: options { \"nodeSpacing\": 100, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u003c /mermaid \u003e}} 呈现的输出效果如下: 7.5.7 饼图 一个 饼图 mermaid 示例: {{\u003c mermaid \u003e}} pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:5","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.5.8 echarts ECharts 是一个帮助你生成交互式数据可视化的库. ECharts 提供了常规的 折线图, 柱状图, 散点图, 饼图, K线图, 用于统计的 盒形图, 用于地理数据可视化的 地图, 热力图, 线图, 用于关系数据可视化的 关系图, treemap, 旭日图, 多维数据可视化的 平行坐标, 还有用于 BI 的 漏斗图, 仪表盘, 并且支持图与图之间的混搭. 只需在 echarts shortcode 中以 JSON/YAML/TOML格式插入 ECharts 选项即可. ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:6","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.6 mapbox Mapbox GL JS 是一个 JavaScript 库，它使用 WebGL, 以 vector tiles 和 Mapbox styles 为来源, 将它们渲染成互动式地图. lng [必需] (第一个位置参数) 地图初始中心点的经度, 以度为单位. lat [必需] (第二个位置参数) 地图初始中心点的纬度, 以度为单位. zoom [可选] (第三个位置参数) 地图的初始缩放级别, 默认值是 10. marked [可选] (第四个位置参数) 是否在地图的初始中心点添加图钉, 默认值是 true. light-style [可选] (第五个位置参数) 浅色主题的地图样式, 默认值是前置参数或者网站配置中设置的值. dark-style [可选] (第六个位置参数) 深色主题的地图样式, 默认值是前置参数或者网站配置中设置的值. navigation [可选] 是否添加 NavigationControl, 默认值是前置参数或者网站配置中设置的值. geolocate [可选] 是否添加 GeolocateControl, 默认值是前置参数或者网站配置中设置的值. scale [可选] 是否添加 ScaleControl, 默认值是前置参数或者网站配置中设置的值. fullscreen [可选] 是否添加 FullscreenControl, 默认值是前置参数或者网站配置中设置的值. width [可选] 地图的宽度, 默认值是 100%. height [可选] 地图的高度, 默认值是 20rem. {{\u003c mapbox 121.485 31.233 12 \u003e}} 或者 {{\u003c mapbox lng=121.485 lat=31.233 zoom=12 \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:7","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.7 music music shortcode 基于 APlayer 和 MetingJS 提供了一个内嵌的响应式音乐播放器. 有三种方式使用 music shortcode. 7.7.1 自定义音乐 URL 支持本地资源引用的完整用法. music shortcode 有以下命名参数来使用自定义音乐 URL: server [必需] 音乐的链接. type [可选] 音乐的名称. artist [可选] 音乐的创作者. cover [可选] 音乐的封面链接. 一个使用自定义音乐 URL 的 music 示例: {{\u003c music url=\"music/wind.mp3\" name=起风了 artist=买辣椒也用券 cover=\"images/wind.png\" \u003e}} 呈现的输出效果如下: 7.7.2 音乐平台 URL 的自动识别 music shortcode 有一个命名参数来使用音乐平台 URL 的自动识别: auto [必需]] (第一个位置参数) 用来自动识别的音乐平台 URL, 支持 netease, tencent 和 xiami 平台. 一个使用音乐平台 URL 的自动识别的 music 示例: {{\u003c music auto=\"https://music.163.com/#/playlist?id=60198\" \u003e}} 或者 {{\u003c music \"https://music.163.com/#/playlist?id=60198\" \u003e}} 呈现的输出效果如下: 7.7.3 自定义音乐平台, 类型和 ID music shortcode 有以下命名参数来使用自定义音乐平台: server [必需] [netease, tencent, kugou, xiami, baidu]音乐平台. type [必需] [song, playlist, album, search, artist]音乐类型. id [必需] 歌曲 ID, 或者播放列表 ID, 或者专辑 ID, 或者搜索关键词, 或者创作者 ID. 一个使用自定义音乐平台的 music 示例: {{\u003c music server=\"netease\" type=\"song\" id=\"1868553\" \u003e}} 或者 {{\u003c music netease song 1868553 \u003e}} 呈现的输出效果如下: 7.7.4 其它参数 music shortcode 有一些可以应用于以上三种方式的其它命名参数: theme *[可选]*音乐播放器的主题色, 默认值是 #448aff. fixed *[可选]*是否开启固定模式, 默认值是 false. mini *[可选]*是否开启迷你模式, 默认值是 false. autoplay *[可选]*是否自动播放音乐, 默认值是 false. volume *[可选]*第一次打开播放器时的默认音量, 会被保存在浏览器缓存中, 默认值是 0.7. mutex *[可选]*是否自动暂停其它播放器, 默认值是 true. music shortcode 还有一些只适用于音乐列表方式的其它命名参数: loop [可选][all, one, none]音乐列表的循环模式, 默认值是 none. order [可选][list, random]音乐列表的播放顺序, 默认值是 list. list-folded *[可选]*初次打开的时候音乐列表是否折叠, 默认值是 false. list-max-height *[可选]*音乐列表的最大高度, 默认值是 340px. ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:8","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.8 bilibili {{\u003c bilibili BV1Sx411T7QQ \u003e}} 或者 {{\u003c bilibili id=BV1Sx411T7QQ \u003e}} {{\u003c bilibili BV1TJ411C7An 3 \u003e}} 或者 {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} 呈现的输出效果如下: ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:9","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.9 typeit typeit shortcode 基于 TypeIt 提供了打字动画. {{\u003c typeit \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*... {{\u003c /typeit \u003e}} {{\u003c typeit tag=h4 \u003e}} 这一个带有基于 [TypeIt](https://typeitjs.com/) 的 **打字动画** 的 *段落*... {{\u003c /typeit \u003e}} {{\u003c typeit code=java \u003e}} public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } {{\u003c /typeit \u003e}} {{\u003c typeit group=paragraph \u003e}} **首先**, 这个段落开始 {{\u003c /typeit \u003e}} {{\u003c typeit group=paragraph \u003e}} **然后**, 这个段落开始 {{\u003c /typeit \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:10","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":["书签"],"content":"7.10 script {{\u003c script \u003e}} console.log('Hello LoveIt!'); {{\u003c /script \u003e}} ","date":"2021-05-06","objectID":"https://gethin1990.github.io/first_post/:7:11","tags":["测试"],"title":"一篇关于主题功能测试的文章","uri":"https://gethin1990.github.io/first_post/"},{"categories":null,"content":"Hi，我叫GETHIN，是一名主修计算机，有8年工作经验的软件工程师，擅长全栈开发，主要工作语言是C#，曾就职于多家知名外企和互联网企业，如Honeywell，腾讯文学等，目前就职于GreenDot。 擅长技术体系架构设计与重构，软件项目研究，分析设计与风险识别，爱好云原生架构设计。 熟悉OOP，SOA，AOP，MVC，MVVM，EDA，BDD，DDD，微服务架构，云架构，SPA等架构与编程思想，注重基于SOLID编码规范。熟悉常见的架构风格。熟悉各种UML的使用。 精通C#/.NET开发，熟悉Python，精通传统.NET相关技术WCF，WEBAPI，MVC，WPF并熟练掌握现代.NET开发技术.NET Core, RabbitMQ, Azure, K8S, Docker 等。 认证Scrum Master，善于发现和解决敏捷开发中的各种技术和流程问题，熟知软件开发生命周期SDLC。 熟悉手机IOS端开发，Cordova，熟悉react，vue，javascript，jquary等。 了解SQL Server，Oracle，MySQL，存储过程，EF，Redis。 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/about/:0:0","tags":null,"title":"关于我","uri":"https://gethin1990.github.io/about/"},{"categories":null,"content":"友情链如下 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/links/:1:0","tags":null,"title":"友情链接","uri":"https://gethin1990.github.io/links/"},{"categories":null,"content":"欢迎留言 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/message-board/:1:0","tags":null,"title":"留言板","uri":"https://gethin1990.github.io/message-board/"},{"categories":null,"content":"此页面用于展示收藏的网站 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/websites/:1:0","tags":null,"title":"网站收藏","uri":"https://gethin1990.github.io/websites/"},{"categories":null,"content":"网站里程碑 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/milestone/:1:0","tags":null,"title":"里程碑","uri":"https://gethin1990.github.io/milestone/"},{"categories":null,"content":"2021-5-17 | 添加背景图片 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/milestone/:1:1","tags":null,"title":"里程碑","uri":"https://gethin1990.github.io/milestone/"},{"categories":null,"content":"2021-5-16 | 添加顶部菜单 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/milestone/:1:2","tags":null,"title":"里程碑","uri":"https://gethin1990.github.io/milestone/"},{"categories":null,"content":"2021-5-12 | 添加测试文章 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/milestone/:1:3","tags":null,"title":"里程碑","uri":"https://gethin1990.github.io/milestone/"},{"categories":null,"content":"2021-5-11 | 集成搜索自动化 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/milestone/:1:4","tags":null,"title":"里程碑","uri":"https://gethin1990.github.io/milestone/"},{"categories":null,"content":"2021-5-10 | 添加评论，搜索 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/milestone/:1:5","tags":null,"title":"里程碑","uri":"https://gethin1990.github.io/milestone/"},{"categories":null,"content":"2021-5-6 | 集成Github Action ","date":"0001-01-01","objectID":"https://gethin1990.github.io/milestone/:1:6","tags":null,"title":"里程碑","uri":"https://gethin1990.github.io/milestone/"},{"categories":null,"content":"2021-5-5 | 建站 ","date":"0001-01-01","objectID":"https://gethin1990.github.io/milestone/:1:7","tags":null,"title":"里程碑","uri":"https://gethin1990.github.io/milestone/"}]